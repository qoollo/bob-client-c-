// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: proto/bob.proto
// </auto-generated>
#pragma warning disable 0414, 1591
#region Designer generated code

using grpc = global::Grpc.Core;

namespace BobStorage {
  /// <summary>
  /// API
  /// </summary>
  internal static partial class BobApi
  {
    static readonly string __ServiceName = "bob_storage.BobApi";

    static void __Helper_SerializeMessage(global::Google.Protobuf.IMessage message, grpc::SerializationContext context)
    {
      #if !GRPC_DISABLE_PROTOBUF_BUFFER_SERIALIZATION
      if (message is global::Google.Protobuf.IBufferMessage)
      {
        context.SetPayloadLength(message.CalculateSize());
        global::Google.Protobuf.MessageExtensions.WriteTo(message, context.GetBufferWriter());
        context.Complete();
        return;
      }
      #endif
      context.Complete(global::Google.Protobuf.MessageExtensions.ToByteArray(message));
    }

    static class __Helper_MessageCache<T>
    {
      public static readonly bool IsBufferMessage = global::System.Reflection.IntrospectionExtensions.GetTypeInfo(typeof(global::Google.Protobuf.IBufferMessage)).IsAssignableFrom(typeof(T));
    }

    static T __Helper_DeserializeMessage<T>(grpc::DeserializationContext context, global::Google.Protobuf.MessageParser<T> parser) where T : global::Google.Protobuf.IMessage<T>
    {
      #if !GRPC_DISABLE_PROTOBUF_BUFFER_SERIALIZATION
      if (__Helper_MessageCache<T>.IsBufferMessage)
      {
        return parser.ParseFrom(context.PayloadAsReadOnlySequence());
      }
      #endif
      return parser.ParseFrom(context.PayloadAsNewBuffer());
    }

    static readonly grpc::Marshaller<global::BobStorage.PutRequest> __Marshaller_bob_storage_PutRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::BobStorage.PutRequest.Parser));
    static readonly grpc::Marshaller<global::BobStorage.OpStatus> __Marshaller_bob_storage_OpStatus = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::BobStorage.OpStatus.Parser));
    static readonly grpc::Marshaller<global::BobStorage.GetRequest> __Marshaller_bob_storage_GetRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::BobStorage.GetRequest.Parser));
    static readonly grpc::Marshaller<global::BobStorage.Blob> __Marshaller_bob_storage_Blob = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::BobStorage.Blob.Parser));
    static readonly grpc::Marshaller<global::BobStorage.Null> __Marshaller_bob_storage_Null = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::BobStorage.Null.Parser));
    static readonly grpc::Marshaller<global::BobStorage.ExistRequest> __Marshaller_bob_storage_ExistRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::BobStorage.ExistRequest.Parser));
    static readonly grpc::Marshaller<global::BobStorage.ExistResponse> __Marshaller_bob_storage_ExistResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::BobStorage.ExistResponse.Parser));

    static readonly grpc::Method<global::BobStorage.PutRequest, global::BobStorage.OpStatus> __Method_Put = new grpc::Method<global::BobStorage.PutRequest, global::BobStorage.OpStatus>(
        grpc::MethodType.Unary,
        __ServiceName,
        "Put",
        __Marshaller_bob_storage_PutRequest,
        __Marshaller_bob_storage_OpStatus);

    static readonly grpc::Method<global::BobStorage.GetRequest, global::BobStorage.Blob> __Method_Get = new grpc::Method<global::BobStorage.GetRequest, global::BobStorage.Blob>(
        grpc::MethodType.Unary,
        __ServiceName,
        "Get",
        __Marshaller_bob_storage_GetRequest,
        __Marshaller_bob_storage_Blob);

    static readonly grpc::Method<global::BobStorage.Null, global::BobStorage.Null> __Method_Ping = new grpc::Method<global::BobStorage.Null, global::BobStorage.Null>(
        grpc::MethodType.Unary,
        __ServiceName,
        "Ping",
        __Marshaller_bob_storage_Null,
        __Marshaller_bob_storage_Null);

    static readonly grpc::Method<global::BobStorage.ExistRequest, global::BobStorage.ExistResponse> __Method_Exist = new grpc::Method<global::BobStorage.ExistRequest, global::BobStorage.ExistResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "Exist",
        __Marshaller_bob_storage_ExistRequest,
        __Marshaller_bob_storage_ExistResponse);

    /// <summary>Service descriptor</summary>
    public static global::Google.Protobuf.Reflection.ServiceDescriptor Descriptor
    {
      get { return global::BobStorage.BobReflection.Descriptor.Services[0]; }
    }

    /// <summary>Client for BobApi</summary>
    public partial class BobApiClient : grpc::ClientBase<BobApiClient>
    {
      /// <summary>Creates a new client for BobApi</summary>
      /// <param name="channel">The channel to use to make remote calls.</param>
      public BobApiClient(grpc::ChannelBase channel) : base(channel)
      {
      }
      /// <summary>Creates a new client for BobApi that uses a custom <c>CallInvoker</c>.</summary>
      /// <param name="callInvoker">The callInvoker to use to make remote calls.</param>
      public BobApiClient(grpc::CallInvoker callInvoker) : base(callInvoker)
      {
      }
      /// <summary>Protected parameterless constructor to allow creation of test doubles.</summary>
      protected BobApiClient() : base()
      {
      }
      /// <summary>Protected constructor to allow creation of configured clients.</summary>
      /// <param name="configuration">The client configuration.</param>
      protected BobApiClient(ClientBaseConfiguration configuration) : base(configuration)
      {
      }

      public virtual global::BobStorage.OpStatus Put(global::BobStorage.PutRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return Put(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual global::BobStorage.OpStatus Put(global::BobStorage.PutRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_Put, null, options, request);
      }
      public virtual grpc::AsyncUnaryCall<global::BobStorage.OpStatus> PutAsync(global::BobStorage.PutRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return PutAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual grpc::AsyncUnaryCall<global::BobStorage.OpStatus> PutAsync(global::BobStorage.PutRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_Put, null, options, request);
      }
      public virtual global::BobStorage.Blob Get(global::BobStorage.GetRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return Get(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual global::BobStorage.Blob Get(global::BobStorage.GetRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_Get, null, options, request);
      }
      public virtual grpc::AsyncUnaryCall<global::BobStorage.Blob> GetAsync(global::BobStorage.GetRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return GetAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual grpc::AsyncUnaryCall<global::BobStorage.Blob> GetAsync(global::BobStorage.GetRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_Get, null, options, request);
      }
      public virtual global::BobStorage.Null Ping(global::BobStorage.Null request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return Ping(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual global::BobStorage.Null Ping(global::BobStorage.Null request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_Ping, null, options, request);
      }
      public virtual grpc::AsyncUnaryCall<global::BobStorage.Null> PingAsync(global::BobStorage.Null request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return PingAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual grpc::AsyncUnaryCall<global::BobStorage.Null> PingAsync(global::BobStorage.Null request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_Ping, null, options, request);
      }
      public virtual global::BobStorage.ExistResponse Exist(global::BobStorage.ExistRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return Exist(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual global::BobStorage.ExistResponse Exist(global::BobStorage.ExistRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_Exist, null, options, request);
      }
      public virtual grpc::AsyncUnaryCall<global::BobStorage.ExistResponse> ExistAsync(global::BobStorage.ExistRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return ExistAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual grpc::AsyncUnaryCall<global::BobStorage.ExistResponse> ExistAsync(global::BobStorage.ExistRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_Exist, null, options, request);
      }
      /// <summary>Creates a new instance of client from given <c>ClientBaseConfiguration</c>.</summary>
      protected override BobApiClient NewInstance(ClientBaseConfiguration configuration)
      {
        return new BobApiClient(configuration);
      }
    }

  }
}
#endregion
